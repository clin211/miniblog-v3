# Copyright 2025 长林啊 <767425412@qq.com>. All rights reserved.
# Use of this source code is governed by a MIT style
# license that can be found in the LICENSE file. The original repo for
# this file is https://github.com/clin211/miniblog-v3.git.

# syntax=docker/dockerfile:1

# ============ 1) 构建阶段 ============
FROM golang:1.24.2-alpine AS builder
WORKDIR /app

# 系统工具与证书
RUN apk add --no-cache git ca-certificates tzdata
ENV TZ=Asia/Shanghai

# 设置 Go 环境变量
ENV GOPROXY=https://goproxy.cn,direct \
    GOSUMDB=sum.golang.org \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

# 复制依赖文件
COPY go.mod go.sum ./

# 下载依赖
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    go mod download && go mod verify

# 复制源码
COPY . .

# 构建 user-api 二进制文件
RUN --mount=type=cache,target=/go/pkg/mod \
    --mount=type=cache,target=/root/.cache/go-build \
    go build -ldflags="-w -s" -o _output/user-api ./apps/user/api

# ============ 2) 运行阶段 ============
FROM alpine:latest AS runner
WORKDIR /app

# 安装运行时依赖
RUN apk add --no-cache ca-certificates tzdata
ENV TZ=Asia/Shanghai

# 创建非 root 用户
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# 从构建阶段复制二进制文件
COPY --from=builder /app/_output/user-api /app/user-api

# 复制配置文件
COPY --from=builder /app/apps/user/api/etc /app/etc

# 创建必要目录
RUN mkdir -p /app/logs /app/tmp && \
    chown -R appuser:appgroup /app

# 切换到非 root 用户
USER appuser

# 暴露端口
EXPOSE 8888

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8888/health || exit 1

# 启动命令
CMD ["/app/user-api", "-f", "/app/etc/user.yaml"]
