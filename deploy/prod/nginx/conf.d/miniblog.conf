# miniblog-v3 主配置文件
# 此配置文件需要添加到现有的 nginx 容器中

# HTTP 重定向到 HTTPS
server {
    listen 80;
    server_name api.yourdomain.com;  # 替换为你的域名

    # 重定向所有 HTTP 请求到 HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS 配置
server {
    listen 80;
    listen 443 ssl http2;
    server_name api.yourdomain.com;  # 替换为你的域名

    # SSL 证书配置 - 使用通配符证书或单独的证书
    ssl_certificate /path/to/your/cert.pem;  # 如果是通配符证书可以复用
    ssl_certificate_key /path/to/your/key.pem;

    # 强化SSL配置 - 符合myssl.com A+标准
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # 安全HTTP头 - 针对API服务调整
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;  # API通常不需要被嵌入
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # 针对API的CSP策略 - 更加严格
    add_header Content-Security-Policy "default-src 'none'; frame-ancestors 'none';" always;

    # 启用压缩 - 针对API响应
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types application/json application/xml text/plain text/xml;

    # 限制请求体大小 - 根据API需求调整
    client_max_body_size 10M;

    # 主要访问日志
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 包含各个服务的配置
    include /etc/nginx/conf.d/services/*.conf;

    # 阻止访问隐藏文件和敏感文件
    location ~ /\.(?!well-known) {
        deny all;
    }

    location ~ \.(conf|log|sql|bak)$ {
        deny all;
    }

    # 默认路由
    location / {
        # 可以配置为前端应用或默认页面
        return 200 "Miniblog API Service\n";
        add_header Content-Type text/plain;
    }

    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
